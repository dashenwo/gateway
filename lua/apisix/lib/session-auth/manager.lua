---
--- Generated by Luanalysis
--- Created by liuqin.
--- DateTime: 2020/10/14 下午1:42
---
local ngx          = ngx
local time         = ngx.time
local json = require("cjson.safe")
local function prequire(prefix, package, default)

    if type(package) == "table" then
        return package, package.name
    end

    local ok, module = pcall(require, prefix .. package)

    if not ok then

        return require(prefix .. default), default
    end

    return module, package
end
local session = {
    _VERSION = "1.0"
}

session.__index = session

function session.new(opts)
    if getmetatable(opts) == session then
        return opts
    end
    local ser, sern = prequire("apisix.lib.session-auth.serializers.", opts.serializer or "", "json")
    local enc, encn = prequire("apisix.lib.session-auth.encoders.",    opts.encoder or "",    "base64")
    local sto, ston = prequire("apisix.lib.session-auth.storage.",     opts.storage or "",    "cookie")
    local ck  = require("resty.cookie")
    local self = {
        name = opts.name,
        secret = opts.secret,
        serializer = ser,
        encoder = enc,
    }
    self.cookie = ck:new()
    self.storage = sto.new(opts[opts.storage])
    return setmetatable(self, session)
end


function session.start(opts)
    local self = opts
    if getmetatable(self) == session then
        if self.started then
            return self, self.present
        end
    else
        self = session.new(opts)
    end
    self.now = time()
    local cookie = self.cookie:get(self.name)
    if cookie then
        self.id = cookie
        local  data = self.storage:open(self.id)
        if data then
            --    解析数据
            local decodeData = self.encoder.decode(data)
            self.data = self.serializer.deserialize(decodeData);
        else
            self.data = {}
        end
    else
        self.data = {}
    end
    self.started = true
    return self, true
end
function session:save()
    --    session数据增加时间
    if self.id and self.data.max_age and self.data.jwt then
        local ttl = self.data.max_age
        -- 增加时间
        self.storage:ttl(self.id,ttl,true)
        -- 增加cookie时间
        self.cookie:set({
            key = self.name,
            value = self.id,
            path = "/",
            secure = true, httponly = true,
            expires = ngx.http_time(self.now+self.data.max_age),
            max_age = self.data.max_age
        })
        --给上游设置jwt
        ngx.req.set_header("Token",self.data.jwt)
    end
end
return session